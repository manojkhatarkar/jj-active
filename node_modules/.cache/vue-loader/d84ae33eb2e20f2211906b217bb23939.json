{"remainingRequest":"D:\\jurysoft_projects\\jj-live\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jurysoft_projects\\jj-live\\src\\views\\Certificate.vue?vue&type=template&id=76602ff4&scoped=true&","dependencies":[{"path":"D:\\jurysoft_projects\\jj-live\\src\\views\\Certificate.vue","mtime":1663834348986},{"path":"D:\\jurysoft_projects\\jj-live\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663744999110},{"path":"D:\\jurysoft_projects\\jj-live\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1663745044167},{"path":"D:\\jurysoft_projects\\jj-live\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663744999110},{"path":"D:\\jurysoft_projects\\jj-live\\node_modules\\vue-loader\\lib\\index.js","mtime":1663745044164}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}